---
import ContainerLoaderIcon from "@components/loader/ContainerLoaderIcon.astro";
---

<broker-data>

    <h1>Broker</h1>
    <ContainerLoaderIcon />

    <ul id="tap-headers">
        <li class="tap-header"></li>
    </ul>
    <section id='tap-pages'>

        <article class="tap-page">
            <div class="canvas-container">
                <canvas></canvas>
            </div>
        </article>

    </section>
    
</broker-data>
<style>
    broker-data {
        width: 100%;
        height: auto;

        h1 {
            text-align: center;
            font-size: 2.5rem;

            margin-top: 1rem;
            margin-bottom: 2rem;
        }

        article{
            display: none;
            height: auto;
            width: 100%;
        }

        ul#tap-headers {
            display: flex;
            justify-content: end;
            gap: 1rem;

            width: 95%;
            margin: 0 auto;
            margin-bottom: 3rem;

            body.red & {
                border-bottom: 2px solid var(--red-500);
            }
            body.green & {
                border-bottom: 2px solid var(--green-500);
            }
            html.light > body.red & {
                border-bottom: 2px solid var(--red);
            }
            html.light > body.green & {
                border-bottom: 2px solid var(--green);
            }

            li.tap-header {
                list-style: none;
                cursor: pointer;
                user-select: none;

                padding: 0.5rem;

                border-top-left-radius: 8px;
                border-top-right-radius: 8px;

                &.active {
                    color: var(--bg-color-dark);

                    html.light & {
                        color: var(--bg-color-light);
                    }

                    body.red & {
                        background-color: var(--red-500);
                    }
                    body.green & {
                        background-color: var(--green-500);
                    }
                    html.light > body.red & {
                        background-color: var(--red);
                    }
                    html.light > body.green & {
                        background-color: var(--green);
                    }
                }

                body.red & {
                    border: 2px solid var(--red-500);
                    border-bottom: none;
                }
                body.green & {
                    border: 2px solid var(--green-500);
                    border-bottom: none;
                }
                html.light > body.red & {
                    border: 2px solid var(--red);
                    border-bottom: none;
                }
                html.light > body.green & {
                    border: 2px solid var(--green);
                    border-bottom: none;
                }
            }
        }

        #tap-pages{
            .canvas-container {
                height: 77dvh;
                width: 95%;
                margin: 0 auto;
                margin-bottom: 2rem;
            }
        }
    }
</style>
<script>
    import { getDataBroker } from "@scripts/broker/brokerAPI";
    import { renderCharts } from "@scripts/broker/chartsBroker";
    import { transformDataByYear } from "@scripts/broker/renderBroker";
    import { getCookieJWT } from "@scripts/utils";

    class BrokerData extends HTMLElement {
        constructor() {
            super();
        }
        connectedCallback() {

            const token = getCookieJWT();

            getDataBroker(token).then((data: Array<Object>) => {
                const dataObject = transformDataByYear(data);
                renderCharts(dataObject);
            });

        }
    }
    customElements.define("broker-data", BrokerData);
</script>
