---
import FormSignin from "./forms/FormSignin.astro";
import FormLogin from "./forms/FormLogin.astro";

const { type } = Astro.props;

const backgroundForm =
    type == "login" ? "background__form-login" : "background__form-signin";
const typeForm = type == "login" ? "form__login" : "form__signin";
---

<div class=`background__form ${backgroundForm}`>
    <form class=`form ${typeForm}`>
        {type == "signin" ? <FormSignin /> : <FormLogin />}
    </form>
</div>

<style>
    html.light {
        .form {
            color: #222;
            background-color: #efefef;
        }
    }
    @property --a {
        syntax: "<angle>";
        inherits: false;
        initial-value: 0deg;
    }
    @keyframes rotating {
        0% {
            --a: 0deg;
        }
        100% {
            --a: 360deg;
        }
    }
    .background__form {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 95%;

        &.background__form-login {
            height: 280px;
            max-width: 400px;
        }
        &.background__form-signin {
            height: 750px;
        }

        &::before {
            content: "";
            position: absolute;
            inset: 0;
            background: repeating-conic-gradient(
                from var(--a),
                #0f0,
                #ff0,
                #0ff,
                #f0f,
                #0ff
            );
            border-radius: 10px;
            animation: rotating 20s linear infinite;
        }

        &::after {
            content: "";
            position: absolute;
            inset: 0;
            background: repeating-conic-gradient(
                from var(--a),
                #0f0,
                #ff0,
                #0ff,
                #f0f,
                #0ff
            );
            border-radius: 10px;
            animation: rotating 20s linear infinite;
            filter: blur(5px);
        }
    }
    .form {
        position: relative;
        display: grid;
        grid-template-columns: 1fr;
        margin: 0;
        padding: 20px;
        gap: 20px;
        border-radius: 8px;
        width: calc(100% - 5px);
        height: calc(100% - 5px);
        z-index: 50;
        color: #efefef;
        background-color: var(--primary-color);
    }
    @media (666px < width) {
        .background__form {
            &.background__form-signin {
                height: 392.5px;
                max-width: 900px;
            }
        }
        .form {
            &.form__signin {
                grid-template-columns: 1fr 1fr;
                height: 387.5px;
                gap: 20px;

                .background__btn {
                    grid-column: span 2;
                }
            }
        }
    }
</style>
<script>
    const showPassword = (icon, inputPassword) => {
        if (inputPassword.type === "password") {
            inputPassword.type = "text";
            icon.setAttribute("src", "src/icons/view.svg");
        } else {
            inputPassword.type = "password";
            icon.setAttribute("src", "src/icons/no-view.svg");
        }
    };
    const $passwordIcons = document.querySelectorAll(".password_icon");

    $passwordIcons.forEach((icon) => {
        icon.addEventListener("click", () => {
            showPassword(icon, icon.previousElementSibling);
        });
    });
</script>
