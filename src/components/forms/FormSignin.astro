---
import BtnColor from "@components/BtnColor.astro";
import InputSignin from "@components/forms/InputSignin.astro";

import "src/styles/forms.css";
---

<InputSignin id="username" type="text" text="Usuario:" />

<InputSignin id="lastname" type="text" text="1° Apellido:" />

<InputSignin id="lastname2" type="text" text="2° Apellido:" />

<InputSignin id="name" type="text" text="Nombre:" />

<InputSignin id="email" type="email" text="Correo:" />

<InputSignin
    id="password"
    type="password"
    text="Contraseña:"
    textError="Más de 6 caracteres, y un carácter especial"
/>

<InputSignin
    id="password2"
    type="password"
    text="Confirmar contraseña:"
    textError="Las contraseñas no coinciden"
/>

<p class="form__error-send"></p>

<div class="form__group">
    <BtnColor text="INGRESAR" type="form" />
</div>

<script is:inline>
    // MediaQuery for desktop

    if (window.innerWidth > 666) {
        document.getElementById("label-lastname").innerText = "Apellidos";
        document.getElementById("group__lastname2").remove();
    }
</script>
<script is:inline type="module">
    import { CreateUser } from "./src/scripts/usersAPI";

    const expressions = {
        user: /^[a-zA-Z0-9\_\-]{4,16} ?$/,
        name: /^[a-zA-ZÀ-ÿ]{3,}( [a-zA-ZÀ-ÿ]{3,})? ?$/,
        lastname: /^[a-zA-ZÀ-ÿ]{3,} ?$/,
        password: /^[\wÀ-ÿ\W]{6,}$/,
        characterEspecial: /[°!"#$&()=@\?¡%&\+\/\{\}\*\[\]]/,
        email: /^[a-zA-Z0-9\._%+-]{3,}@[a-zA-Z0-9.-]{3,}\.[a-zA-Z]{2,}$/,
    };

    const fields = {
        username: false,
        name: false,
        lastname: false,
        lastname2: false,
        password: false,
        password2: false,
        email: false,
    };

    // MediaQuery for desktop
    const desktopDevice = window.innerWidth > 666;

    if (desktopDevice) {
        expressions.lastname = /^[a-zA-ZÀ-ÿ]{3,} [a-zA-ZÀ-ÿ]{3,} ?$/;
        fields.lastname2 = true;
    }
    // - - - - - - - - - - - - - - - - - - - - - - - Funtions Validations - - - - - - - - - - - - - - - - - - -

    const validateForm = (e) => {
        switch (e.target.name) {
            case "username":
                validateField(expressions.user, e.target, "username");
                break;
            case "name":
                validateField(expressions.name, e.target, "name");
                break;
            case "lastname":
                validateField(expressions.lastname, e.target, "lastname");
                break;
            case "lastname2":
                validateField(expressions.lastname, e.target, "lastname2");
                break;
            case "email":
                validateField(expressions.email, e.target, "email");
                break;
            case "password":
                validatePassword(e.target.value);
                validatePassword2();
                break;
            case "password2":
                validatePassword2();
                break;
        }
    };

    const $groupPassword = document.getElementById(`group__password`),
        $textError = document.querySelector(".form__error");

    function validatePassword(value) {
        if (
            expressions.password.test(value) &&
            expressions.characterEspecial.test(value)
        ) {
            $groupPassword.classList.remove("form__group-wrong");
            $groupPassword.classList.add("form__group-correct");
            fields["password"] = true;

            if (desktopDevice) $textError.style.opacity = "0";
            else $textError.style.display = "none";
        } else {
            $groupPassword.classList.add("form__group-wrong");
            $groupPassword.classList.remove("form__group-correct");
            fields["password"] = false;

            if (desktopDevice) $textError.style.opacity = "1";
            else $textError.style.display = "block";
        }
    }

    function validateField(expression, input, field) {
        const $groupInput = document.getElementById(`group__${field}`);
        const $svg = document.getElementById(`${field}_svg`);

        if (expression.test(input.value)) {
            $groupInput.classList.remove("form__group-wrong");
            $groupInput.classList.add("form__group-correct");

            $svg.setAttribute("src", "src/icons/check.svg");

            fields[field] = true;
        } else {
            $groupInput.classList.add("form__group-wrong");
            $groupInput.classList.remove("form__group-correct");

            $svg.setAttribute("src", "src/icons/error.svg");

            fields[field] = false;
        }
    }

    const $inputPassword1 = document.getElementById("password"),
        $inputPassword2 = document.getElementById("password2"),
        $groupPassword2 = document.getElementById(`group__password2`),
        $textError2 = document.querySelectorAll(".form__error")[1];

    function validatePassword2() {
        if ($inputPassword1.value !== $inputPassword2.value) {
            $groupPassword2.classList.add("form__group-wrong");
            $groupPassword2.classList.remove("form__group-correct");

            if (desktopDevice) $textError2.style.opacity = "1";
            else $textError2.style.display = "block";

            fields["password2"] = false;
        } else {
            $groupPassword2.classList.remove("form__group-wrong");
            $groupPassword2.classList.add("form__group-correct");

            if (desktopDevice) $textError2.style.opacity = "0";
            else $textError2.style.display = "none";

            fields["password2"] = true;
        }
    }

    const $inputs = document.querySelectorAll(".form__input");

    $inputs.forEach((input) => {
        input.addEventListener("keyup", validateForm);
        input.addEventListener("blur", validateForm);
    });

    // - - -- - - - - - - - - - - - - - - - - - SEND DATA FORM SIGNIN - - - - - - - - - - - - - - - - - - - - - - -
    document.getElementById("form-signin").addEventListener("submit", (e) => {
        e.preventDefault();

        let formComplete =
            fields.name &&
            fields.lastname &&
            fields.lastname2 &&
            fields.username &&
            fields.password &&
            fields.password2 &&
            fields.email;

        if (formComplete) {
            const data = Object.fromEntries(new FormData(e.target));

            delete data.password2;

            CreateUser(data);
        }
    });
</script>
