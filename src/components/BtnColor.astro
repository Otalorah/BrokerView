---
const { text, type } = Astro.props;

const isForm = type == 'form'
---

{isForm ? <button class=`btn ${type}`>
            {text}
            <span></span>
          </button> 
: <button class=`btn ${type}`>{text}</button>}

<style>
     @keyframes rota {
        from{
            transform: rotate(0deg);
        }
        to{
            transform: rotate(360deg);
        }
    }

    button.btn {
        position: relative;
        font-family: inherit;
        letter-spacing: 1.5px;
        cursor: pointer;

        width: 90%;
        margin: auto;
        border-radius: 4px;

        background-color: transparent;

        body.red & {
            border: 2px solid var(--red-800);
            color: var(--red-700);
        }
        body.green & {
            border: 2px solid var(--green-600);
            color: var(--green-500);
        }
        html.light > body.red & {
            border: 2px solid var(--red);
            color: var(--red);
        }
        html.light > body.green & {
            border: 2px solid var(--green);
            color: var(--green);
        }

        &.form {
            max-width: 400px;
            height: 40px;
        }
        &#disable{
            color: transparent;
            pointer-events: none;
        }

        &.no-found{
            margin: auto;
            max-width: 400px;
            height: 40px;
        }
        &.change_password {
            position: relative;
            max-width: 100px;
            height: 25px;
            margin: 0;
        }

        &:hover {
            body.red &,
            body.green & {
                color: var(--text-color-dark);
            }

            html.light > body.red &,
            html.light > body.green & {
                color: var(--text-color-dark);
            }
            body.red & {
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--red-800),
                    var(--red)
                );
            }
            body.green & {
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--green-600),
                    var(--green)
                );
            }
        }

        span{
            display: none;

            position: absolute;
            top: 5px;
            left: calc(50% - 13px); 

            width: 20px;
            height: 20px;

            border-radius: 25px;
            animation: rota 2.5s linear infinite;

            #disable &{
                display: block;
            }

            body.red &{
                border: 3px solid var(--red);
            }
            body.green &{
                border: 3px solid var(--green);
            }

            &::before{
                content: '';
                position: absolute;
                top: 0;
                right: -3px;
 
                width: 10px;
                height: 8px;
                transform: rotate(-45deg);

                background-color: var(--bg-color-dark);

                
        }
        html.light &::before{
                    background-color: var(--bg-color-light);
                }
    }}
</style>
