---
const { type } = Astro.props;
---
{
    type == 'navBar' ? 
    <header class=`background ${type}`><slot/></header> 
    : <section class=`background ${type}`><slot /></section>
}


<style>
    @property --a {
        syntax: "<angle>";
        inherits: false;
        initial-value: 0deg;
    }
    @keyframes rotating {
        0% {
            --a: 0deg;
        }
        100% {
            --a: 360deg;
        }
    }

    .background {
        display: flex;
        justify-content: center;
        align-items: center;

        position: relative;
        width: 95%;

        &.navBar {
            position: fixed;
            height: 55px;
            width: 100%;
            min-width: 300px;
            z-index: 100;
            inset: 0;

            &::after {
                border-radius: 0;
                animation: none;
            }
            &::before {
                border-radius: 0;
                animation: none;
            }
            &:has(div.hamburger_icon){
                padding-left: 33px;
            }
        }

        &.form-login {
            max-width: 400px;
            z-index: 50;
            padding: 3px;
        }

        &.form-signin {
            max-width: 650px;
            z-index: 50;
            padding: 3px;
        }

        &::before{
            content: "";
            position: absolute;
            inset: 0;
            border-radius: 8px;
            animation: rotating 20s linear infinite;

            body.red &{
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--red),
                    var(--red),
                    var(--red),
                    var(--red),
                    var(--red)
                );
            }

            body.green &{
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--green),
                    var(--green),
                    var(--green),
                    var(--green),
                    var(--green)
                );
            }
        }

        &::after{
            content: "";
            position: absolute;
            inset: 0;
            border-radius: 8px;
            animation: rotating 20s linear infinite;
            filter: blur(5px);

            body.red &{
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--red-600),
                    var(--red),
                    var(--red-600),
                    var(--red)
                );
            }

            body.green &{
                background-image: repeating-conic-gradient(
                    from var(--a),
                    var(--green-600),
                    var(--green),
                    var(--green-600),
                    var(--green)
                );
            }
        }
    }
</style>