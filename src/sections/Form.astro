---
import FormSignin from "@components/forms/FormSignin.astro";
import FormLogin from "@components/forms/FormLogin.astro";
import BackgroundColors from "@components/BackgroundColors.astro";

const { type } = Astro.props;

const typeForm = type == "login" ? "form-login" : "form-signin";
---

<BackgroundColors type={typeForm}>
    <form class=`form ${typeForm}` id={typeForm}>
        {type == "signin" ? <FormSignin data-astro-reload /> : <FormLogin />}
    </form>
</BackgroundColors>
<style>
    .form {
        position: relative;
        display: grid;
        grid-template-columns: 1fr;
        margin: 0;
        padding: 20px;
        gap: 20px;
        border-radius: 8px;
        width: calc(100% - 5px);
        height: calc(100% - 5px);
        z-index: 50;
        color: #efefef;
        background-color: var(--bg-color-dark);
    }
    body.red {
        form {
            border: 1px solid var(--red-light);
        }
    }
    body.green {
        form {
            border: 1px solid var(--green-light);
        }
    }
    html.light {
        .form {
            color: var(--text-color-light);
            background-color: var(--bg-color-light);
        }
    }
    @media screen and (666px < width) {
        .form {
            &.form-signin {
                grid-template-columns: 1fr 1fr;
                height: 387.5px;
                gap: 20px;

                .background__btn {
                    grid-column: span 2;
                }
            }
        }
    }
</style>
<script>
    document.addEventListener("astro:page-load", () => {
        // Show text in input passwords
        const showPassword = (icon, inputPassword) => {
            if (inputPassword.type === "password") {
                inputPassword.type = "text";
                icon.setAttribute("src", "src/icons/view.svg");
            } else {
                inputPassword.type = "password";
                icon.setAttribute("src", "src/icons/no-view.svg");
            }
        };
        const $passwordIcons = document.querySelectorAll(".password_icon");

        $passwordIcons.forEach((icon) => {
            icon.addEventListener("click", () => {
                showPassword(icon, icon.previousElementSibling);
            });
        });

        //Send data form-login
        if (window.location.pathname == "/") {
            const $formLogin = document.querySelector(".form-login"),
                $userLogin = document.getElementById("user-login"),
                $passwordLogin = document.getElementById("password-login");

            $formLogin.addEventListener("submit", (e) => {
                e.preventDefault();

                const objectData = {
                    username: $userLogin.value,
                    password: $passwordLogin.value,
                };
                console.log(objectData);
            });
        }
        // Send data form-signin

        const expressions = {
            user: /^[a-zA-Z0-9\_\-]{4,16}$/,
            name: /^[a-zA-ZÀ-ÿ ]{3,}( [a-zA-ZÀ-ÿ ]{3,})?$/,
            lastname: /^[a-zA-ZÀ-ÿ]{3,}$/,
            password: /^[\wÀ-ÿ\W]{6,}$/,
            especial: /[°!"#$&()=@\?¡%&\+\/\{\}\*\[\]]/,
            email: /^[a-zA-Z0-9\._%+-]{3,}@[a-zA-Z0-9.-]{3,}\.[a-zA-Z]{2,}$/,
        };

        const fields = {
            user: false,
            name: false,
            lastname: false,
            lastname2: false,
            password: false,
            email: false,
        };

        // - - - - - - - - - - - - - - - - - - - - - - - Funtions Validations - - - - - - - - - - - - - - - - - - -

        const validateForm = (e) => {
            switch (e.target.name) {
                case "user":
                    validateField(expressions.user, e.target, "user");
                    break;
                case "name":
                    validateField(expressions.name, e.target, "name");
                    break;
                case "lastname":
                    validateField(expressions.lastname, e.target, "lastname");
                    break;
                case "lastname2":
                    validateField(expressions.lastname, e.target, "lastname2");
                    break;
                case "email":
                    validateField(expressions.email, e.target, "email");
                    break;
                case "password":
                    (() => {
                        const $groupPassword =
                                document.getElementById(`group__password`),
                            $textError = document.querySelector(".form__error");

                        if (
                            expressions.password.test(e.target.value) &
                            expressions.especial.test(e.target.value)
                        ) {
                            $groupPassword.classList.remove(
                                "form__group-wrong",
                            );
                            $groupPassword.classList.add("form__group-correct");
                            $textError.style.display = "none";
                        } else {
                            $groupPassword.classList.add("form__group-wrong");
                            $groupPassword.classList.remove(
                                "form__group-correct",
                            );
                            $textError.style.display = "block";
                        }
                    })();
                    validatePassword2();
                    break;
                case "password2":
                    validatePassword2();
                    break;
            }
        };

        const validateField = (expression, input, field) => {
            const $groupInput = document.getElementById(`group__${field}`);
            const $svg = document.getElementById(`${field}_svg`);

            if (expression.test(input.value)) {
                $groupInput.classList.remove("form__group-wrong");
                $groupInput.classList.add("form__group-correct");
                $svg.setAttribute("src", "src/icons/check.svg");
                fields[field] = true;
            } else {
                $groupInput.classList.add("form__group-wrong");
                $groupInput.classList.remove("form__group-correct");
                $svg.setAttribute("src", "src/icons/error.svg");
                fields[field] = false;
            }
        };

        const validatePassword2 = () => {
            const $inputPassword1 = document.getElementById("password"),
                $inputPassword2 = document.getElementById("password2"),
                $groupPassword2 = document.getElementById(`group__password2`),
                $textError = document.querySelectorAll(".form__error")[1];

            if ($inputPassword1.value !== $inputPassword2.value) {
                $groupPassword2.classList.add("form__group-wrong");
                $groupPassword2.classList.remove("form__group-correct");
                $textError.style.display = "block";
                fields["password"] = false;
            } else {
                $groupPassword2.classList.remove("form__group-wrong");
                $groupPassword2.classList.add("form__group-correct");
                $textError.style.display = "none";
                fields["password"] = true;
            }
        };

        // - - -- - - - - - - - - - - - - - - - - - SEND DATA FORM LOGIN - - - - - - - - - - - - - - - - - - - - - - -

        if (window.location.pathname == "/signin") {
            if (window.innerWidth > 666) {
                document.getElementById("label-lastname").innerText =
                    "Apellidos";
                expressions.lastname = /^[a-zA-ZÀ-ÿ]{3,} [a-zA-ZÀ-ÿ]{3,}$/;
                fields.lastname2 = true;
            }

            const $inputs = document.querySelectorAll(".form__input");

            $inputs.forEach((input) => {
                input.addEventListener("keyup", validateForm);
                input.addEventListener("blur", validateForm);
            });

            // - - - - - - - - - - - - - - - - - - - - - Send data - - - - - - - - - - - - - - - -
            const $form = document.getElementById("form-signin");

            const $user = document.getElementById("user"),
                $name = document.getElementById("name"),
                $lastname = document.getElementById("lastname"),
                $lastname2 = document.getElementById("lastname2"),
                $email = document.getElementById("email"),
                $password = document.getElementById("password");

            $form.addEventListener("submit", (e) => {
                e.preventDefault();

                let formComplete =
                    fields.name &
                    fields.lastname &
                    fields.lastname2 &
                    fields.user &
                    fields.password &
                    fields.email;

                if (formComplete) {
                    const objectData = {
                        username: $user.value,
                        name: $name.value,
                        lastname: $lastname.value + " " + $lastname2.value,
                        email: $email.value,
                        password: $password.value,
                    };
                    console.log(objectData);
                }
            });
        }
    });
</script>
