---
import FormSignin from "@components/forms/FormSignin.astro";
import FormLogin from "@components/forms/FormLogin.astro";
import BackgroundColors from "@components/BackgroundColors.astro";

const { type } = Astro.props;

const typeForm = type == "login" ? "form-login" : "form-signin";
---

<BackgroundColors type={typeForm}>
    <form class=`form ${typeForm}`>
        {type == "signin" ? <FormSignin /> : <FormLogin />}
    </form>
</BackgroundColors>
<style>
    .form {
        position: relative;
        display: grid;
        grid-template-columns: 1fr;
        margin: 0;
        padding: 20px;
        gap: 20px;
        border-radius: 8px;
        width: calc(100% - 5px);
        height: calc(100% - 5px);
        z-index: 50;
        color: #efefef;
        background-color: var(--primary-color);
    }
    body.red {
        form {
            border: 1px solid var(--red-light);
        }
    }
    body.green {
        form {
            border: 1px solid var(--green-light);
        }
    }
    html.light {
        .form {
            color: #222;
            background-color: #efefef;
        }
    }
    @media (666px < width) {
        .form {
            &.form-signin {
                grid-template-columns: 1fr 1fr;
                height: 387.5px;
                gap: 20px;

                .background__btn {
                    grid-column: span 2;
                }
            }
        }
    }
</style>
<script>
    const showPassword = (icon, inputPassword) => {
        if (inputPassword.type === "password") {
            inputPassword.type = "text";
            icon.setAttribute("src", "src/icons/view.svg");
        } else {
            inputPassword.type = "password";
            icon.setAttribute("src", "src/icons/no-view.svg");
        }
    };
    const $passwordIcons = document.querySelectorAll(".password_icon");

    $passwordIcons.forEach((icon) => {
        icon.addEventListener("click", () => {
            showPassword(icon, icon.previousElementSibling);
        });
    });
</script>
